<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="io.github.johnjcool.dvblink.live.tv">

    <!-- Required to play internet-based streaming contents. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!-- Required to check network connection status. -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Required to read and update channel and program information in TvProvider. -->
    <uses-permission android:name="com.android.providers.tv.permission.READ_EPG_DATA" />
    <uses-permission android:name="com.android.providers.tv.permission.WRITE_EPG_DATA" />

    <!-- Required to use the android AccountManager -->
    <uses-permission
        android:name="android.permission.GET_ACCOUNTS"
        android:maxSdkVersion="27" />
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />

    <!-- Required for Syncing Data -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <uses-feature
        android:name="android.software.leanback"
        android:required="true" />

    <!-- Required to expose this app in the store only when the device has TV input framework
    with the TV app. -->
    <uses-feature
        android:name="android.software.live_tv"
        android:required="true" />

    <!--
         In order to be visible for Android TV devices in the store, we MUST declare touchscreen
         as optional
    -->
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <application
        android:name=".Application"
        android:allowBackup="true"
        android:banner="@drawable/banner"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme"
        tools:ignore="GoogleAppIndexingWarning">

        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Launched by the TV app before it uses RichTvInputService. This registers channels and
        sets up SampleJobService to provide program information in the background. -->
        <activity android:name="io.github.johnjcool.dvblink.live.tv.tv.activity.TvInputSetupActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <activity
            android:name="io.github.johnjcool.dvblink.live.tv.settings.SettingsActivity"
            android:theme="@style/Theme.Preferences"></activity>

        <activity
            android:name="io.github.johnjcool.dvblink.live.tv.account.AuthenticatorActivity"
            android:label="@string/title_activity_authenticator" />

        <service
            android:name=".account.AuthenticatorService"
            android:permission="android.permission.ACCOUNT_MANAGER">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticatorservice" />
        </service>
        <!-- TV input which provides channels based on the streaming contents.
        Requires "android.permission.BIND_TV_INPUT" to ensure that only system services can bind.
        This provides the full implementation of TvInputService including EPG, subtitles,
        multi-audio, parental controls, and overlay view.
        -->
        <service
            android:name="io.github.johnjcool.dvblink.live.tv.tv.service.TvInputService"
            android:label="@string/app_name"
            android:permission="android.permission.BIND_TV_INPUT">
            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.media.tv.TvInputService" />
            </intent-filter>
            <!-- An XML file which describes this input. This provides pointers to the
            RichTvInputSetupActivity to the system/TV app. -->
            <meta-data
                android:name="android.media.tv.input"
                android:resource="@xml/tvinputservice" />
        </service>

        <!-- This service is for using JobScheduler to sync EPG data. -->
        <service
            android:name="io.github.johnjcool.dvblink.live.tv.tv.service.epg.EpgSyncJobService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <!-- This service is for using JobScheduler to sync EPG data. -->
        <service
            android:name="io.github.johnjcool.dvblink.live.tv.tv.service.dvr.DvrSyncService"
            android:exported="true"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <!-- This receiver is for sync job schedule well after reboot. -->
        <receiver android:name="io.github.johnjcool.dvblink.live.tv.tv.receiver.TvBootReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

    </application>

</manifest>
